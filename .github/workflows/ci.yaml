name: ci
on: pull_request
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.21.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: snipeit
          MYSQL_USER: snipeit
          MYSQL_PASSWORD: userpassword
        options: --health-cmd="mysqladmin ping -h localhost -u root --password=rootpassword" --health-interval=10s --health-timeout=5s --health-retries=10
      snipe:
        image: snipe/snipe-it:v6.3.1
        ports:
          - "8080:80"
        env:
          APP_ENV: local
          APP_DEBUG: true
          APP_KEY: base64:Glj2HbPaX9S1R9sOBUgr6MdL4dIR8njbVOoBKDRsGZg=
          APP_URL: http://localhost:8080
          APP_TIMEZONE: Etc/UTC
          APP_LOCALE: en
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: snipeit
          MYSQL_USER: snipeit
          MYSQL_PASSWORD: userpassword
          MYSQL_PORT_3306_TCP_ADDR: mysql
          MYSQL_PORT_3306_TCP_PORT: 3306

          # Docker-specific variables
          PHP_UPLOAD_LIMIT: 100
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install mysql client
        run: sudo apt install mysql-client-8.0
      - name: Fix keys
        run: docker exec $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}') bash -c 'php artisan passport:install'
      - name: Initialize database for snipe-it
        run: docker cp test/snipe-it-manual-backup-2024-02-27-00-00-07.zip $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}'):/var/www/html/ && docker exec $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}') bash -c 'php artisan snipeit:restore /var/www/html/snipe-it-manual-backup-2024-02-27-00-00-07.zip --force'
      - name: Run migrations
        run: docker exec $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}') bash -c 'php artisan migrate'
      - name: Build baton-snipe-it
        run: go build ./cmd/baton-snipe-it
      - name: Run baton-snipe-it
        env:
          BATON_BASE_URL: 'http://localhost:8080'
          BATON_ACCESS_TOKEN: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI1IiwianRpIjoiMzA5OWY5ODFjZTIxMzU3NjAyM2M4NjNlYmU0MGQwZDQ4YTk1ZjQ5ODU5M2M2YzAxNjE1NzZhZmU1Mjk5MTFhMGUwMWVhNmU3NDg1YmI5YTgiLCJpYXQiOjE3MDg5OTE0MDcuMjkzNjUsIm5iZiI6MTcwODk5MTQwNy4yOTM2NTEsImV4cCI6MjM0MDE0MzQwNy4yODgyNjgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.e9qniz9XL9VGugQYTSfv8zqmbfm2yxBQp4rpsK1BXxDTfXqVCSnimLL7_h2QQ0gwwTV12WqCqHwDPhT5W6oR6xhS1ppcALmtlYYFBhFabpbqHC6ULmvzmTsYb1b4Yt6ynTRqt85BMXqVmwlGP5x8KearrJIa7jV4y0H-TN3RNnT92krmtslraXdRS8HABEerJKs5LFphkGM6gktxTJYFl6lkwHP4Ggk74XCfHO2gqEjvCT_TkjiyOD7fZu73sv3e-UKFnTfpqLqTsQE-9q6pO8WXGKjA5rww2Q_G2k2ICHHiane9Ij-VxM2QhFmnB6U_6ZbsMuRR2MN5H2AR27vcAGIOA3YgbWj-PQZAAhZOp0ctWwWWjYOO87UZ1BB27Sf50TiBGqIeKi0Dr2tfuCyynAs0q2Jd5yToYUobMYh8AFFVjGumDeFITYLf6BtMNuYBTSLHfHh4KtGjiJbRXfYpQbGq5jDjZpjthS7cq6KWadJEzOVgJ_bTrs2sCJTKo1WUF122oWWpHGk1bG6UlYzGRwlJHPvOclgeP7Zs8Q2ybP55hZiNKFtRTxwvLqb8BNSfx4q-mwrI30kZOyKX3oytkiHn5BFFhwtm9tVMiC0PlUG_ZP2h8gKyW575l9xYl-IjYUN_miRLTpw3t8f9Tyusdu-wOnV0_SHTBziNnHF19mg'
        run: ./baton-snipe-it --log-level=debug
      - name: Snipe logs
        if: always()
        run: docker logs "${{ job.services.snipe.id }}"
