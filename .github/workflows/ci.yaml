name: ci
on: pull_request
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.21.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v3
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: snipeit
          MYSQL_USER: snipeit
          MYSQL_PASSWORD: userpassword
        options: --health-cmd="mysqladmin ping -h localhost -u root --password=rootpassword" --health-interval=10s --health-timeout=5s --health-retries=10
      snipe:
        image: snipe/snipe-it:v6.3.1
        ports:
          - "8080:80"
        env:
          APP_ENV: local
          APP_DEBUG: true
          APP_KEY: base64:Glj2HbPaX9S1R9sOBUgr6MdL4dIR8njbVOoBKDRsGZg=
          APP_URL: http://localhost:8080
          APP_TIMEZONE: Etc/UTC
          APP_LOCALE: en
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: snipeit
          MYSQL_USER: snipeit
          MYSQL_PASSWORD: userpassword
          MYSQL_PORT_3306_TCP_ADDR: mysql

          # Docker-specific variables
          PHP_UPLOAD_LIMIT: 100
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install mysql client
        run: sudo apt install mysql-client-8.0
      - name: Fix keys
        run: docker exec $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}') bash -c 'php artisan passport:install'
      - name: Run migrations
        run: docker exec $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}') bash -c 'php artisan migrate'
      - name: Initialize database for snipe-it
        run: mysql --host=127.0.0.1 --user=root --password=rootpassword --port=3306 snipeit < test/snipeit.sql
      # - name: Fix permissions
      #   run: docker exec $(docker ps --filter='ancestor=snipe/snipe-it:v6.3.1' --format='{{.ID}}') bash -c 'chown docker /var/www/html/storage/logs/laravel.log'
      - name: Build baton-snipe-it
        run: go build ./cmd/baton-snipe-it
      - name: Run baton-snipe-it
        env:
          BATON_BASE_URL: 'http://localhost:8080'
          BATON_ACCESS_TOKEN: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiMjQ1ZDMxOTU2YjU1NmVjZjA0MDNhM2Y5MDU0NGYwNmExYzdlOGY0NTliZDhhZDBlYTU2NzlhMTBkNGU0NzQwYWE4ODg1Y2Q3YjAyMGZmNmUiLCJpYXQiOjE3MDg5ODk1MjEuNTc5MDY2LCJuYmYiOjE3MDg5ODk1MjEuNTc5MDY3LCJleHAiOjIzNDAxNDE1MjEuNTc0MDMxLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.EArCjX2vvaYwPP4wLZAtydXyF9Q9yGUj8R2W9PyYNnRs7w57wdGh_pBRmE2AuT1yQIFTpA6E20ctxsss8Z6qlbxiFumWSGb-aNim6z-b3EI7hz87nDToPSjnH44-JSJSj9XCjR88Oo-iJmzw0a43JLFn-vFUbN3g8yWLI_-vSM5a0dWMgWdRrA-dj6WdzdRYe9KF5w6bgduUtvnkXV6qNJWcXvTUvC9Z9ln8lgGH_6oJpChEPMo7qrJcf77ujPwwaVAG5rowOsLpLAKgVSaxiYrWYh1C44SZsFj7pkN-dLI7upIeEqQx-13NE5v93RQhYYUcmGoO6Gsh23tZGht3Wk-LweGgvYKlswp9RA2wqwzi8CpH3GeLmKFr3_c2-wqK9QXay3L-0RG5b0cD5hydO8pYQbAnxivPxOomjeGKg9npcjsvVFQEijsFf0eC89neZT_UtCw18fstkWs0VcByI50FAuaG6K4pjUhw8o78ygo4uxIDqKFoj-PcIxkgVL-P_8hLF0w5h-xt-FCcKO7B4CKNfP_7GfUzVrwL3y5uVeWkGYEThUkd5X9vvvpgs6MScTam9F7dl4WWOoRveFKKZA_bcZbe7Oj97tk4njATHpaYW2vg__8MLRh4S14h33EcGROOQDglDVs9dfMEH_mOvB_PYAErMTfN4DVhof0IjkQ'
        run: ./baton-snipe-it --log-level=debug
      - name: Snipe logs
        if: always()
        run: docker logs "${{ job.services.snipe.id }}"
